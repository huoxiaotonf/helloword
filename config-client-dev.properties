foo=foo version 3
ser.prt=88888888
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.url=jdbc:p6spy:mysql://heanyidai.mysql.rds.aliyuncs.com/ehean-web-dev
spring.datasource.username=hean
spring.datasource.password=0CD3FFC14838B8666B7AEF7611145AB5
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=5
# 配置监控统计拦截的filters
spring.datasource.filters=stat
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# 验证语句
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
# 从连接池获取连接时,是否检测连接可用性
spring.datasource.testOnBorrow=false
# 释放连接到连接池时,是否检测连接可用性
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
# psCache缓存 100
spring.datasource.maxOpenPreparedStatements=100
spring.datasource.maxPoolPreparedStatementPerConnectionSize=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
# 对于建立连接过长的连接强制关闭
spring.datasource.removeAbandoned=true
# 如果连接建立时间超过了30分钟，则强制将其关闭
spring.datasource.removeAbandonedTimeout=1800
# 将当前关闭动作记录到日志
spring.datasource.logAbandoned=true


mybatis.config-locations=classpath:config/mybatis-config.xml
mybatis.mapper-locations=classpath:*.xml

